//
// Entry Point

Template = __ el:Root __ {
    return el;
}

//
// Productions

Root
    = SimpleElement
    / Element

SimpleElement
    = ElementType _ StringLike TERM
    / ElementType TERM

Element
    = ElementType _ Block

ElementType
    = SimpleSelector AttributeList?

SimpleSelector
    = NodeName NodeId? ClassList?
    / NodeId ClassList?
    / ClassList

NodeName
    = Symbol

NodeId
    = '#' Symbol

ClassList
    = ClassItem+

ClassItem
    = '.' Symbol (':' Variable)?
    / '.' Variable '?'?
    / '.#{' _ Expression '}'

AttributeList
    = '(' _ Attributes ')'

Attributes
    = Attribute (',' _ Attribute)*

Attribute
    = Key _ '=' _ Expression
    / Key Delegate? _ '->' _ EventName

Key
    = [a-z_]i [a-z0-9_-]i*

Delegate
    = '(' [^)]+ ')'

Expression
    = Symbol _
    / String _
    / Variable _

EventName
    = [a-z_]i [a-z0-9_:-]i* _

Block
    = '{' __ BlockInner* '}' __

BlockInner
    = SimpleElement
    / StringLike __
    / BoundCollection __
    / Element

StringLike
    = String
    / Variable

String
    = '"' str:DoubleQuotedStringItem* '"' _ {
        if (str.length === 1 && typeof str[0] === 'string') {
            return str[0];
        } else {
            throw new Error("no interp");
        }
    }
    / "'" str:SingleQuotedStringItem* "'" _ {
        if (str.length === 1 && typeof str[0] === 'string') {
            return str[0];
        } else {
            throw new Error("no interp");
        }
    }

DoubleQuotedStringItem
    = $( DoubleQuotedStringChar+ )
    / Interpolation

DoubleQuotedStringChar
    = '\\n'     { return "\n"; }
    / '\\t'     { return "\t"; }
    / '\\"'     { return '"'; }
    / '\\\\'    { return "\\"; }
    / [^\"]

SingleQuotedStringItem
    = $( SingleQuotedStringChar+ )
    / Interpolation

SingleQuotedStringChar
    = '\\n'     { return "\n"; }
    / '\\t'     { return "\t"; }
    / "\\'"     { return "'"; }
    / '\\\\'    { return "\\"; }
    / [^\']

Interpolation
    = '#{' Expression '}'

Variable
    = UnboundVariable
    / BoundVariable

UnboundVariable
    = '$' VariableName

BoundVariable
    = '$$' VariableName

BoundCollection
    = '@' VariableName

VariableName
    = $( [a-z_]i [a-z0-9_-]i* )

Symbol
    = $( [a-z_]i [a-z0-9_-]i* )

//
// Helpers

_
    = [ \t]*

__
    = IGNORE*

NL
    = '\n'
    / '\r' '\n'?

COMMENT
    = '//' [^\r\n]*

IGNORE
    = [ \t\r\n]
    / COMMENT

TERM
    = _ &'}'
    / _ COMMENT? NL __
    / _ COMMENT? !.
